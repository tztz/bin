#!/bin/bash

#
# Renames a Git branch both locally and remotely.
#
# From https://stackoverflow.com/questions/30590083/git-how-to-rename-a-branch-both-local-and-remote
#
# @author mvz
#

old_name="${1}"
new_name="${2}"

remote="origin"

if [[ "${old_name}" == '' ]]; then
	echo "Usage: git_rename <old-branch-name> <new-branch-name>"
	exit 1
fi

if [[ "${new_name}" == '' ]]; then
	echo "Usage: git_rename <old-branch-name> <new-branch-name>"
	exit 1
fi

echo "Renaming branch '${old_name}' to '${new_name}' (remote: ${remote})"

# Rename the local branch to the new name
git branch -m $old_name $new_name

# Delete the old branch on remote
git push $remote --delete $old_name

# Prevent git from using the old name when pushing in the next step.
# Otherwise, git will use the old upstream name instead of $new_name.
git branch --unset-upstream $new_name

# Push the new branch to remote
git push $remote $new_name

# Reset the upstream branch for the new_name local branch
git push $remote -u $new_name
